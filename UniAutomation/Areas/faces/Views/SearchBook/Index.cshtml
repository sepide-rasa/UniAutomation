@using Kendo.Mvc.UI;
<div class="modal" id="SearchBook">
    <script src="@Url.Content("~/Content/Base.js")" type="text/javascript"></script>
    <div>
        <br />  
         <a href="@Url.Content("~/Helps/جستجوی کتاب.htm")" target="_blank" id="Help" title="راهنما" style="background-image:url('/Content/images/1381415123_help.png');background-repeat: no-repeat;height: 20px;float: left;top: 10px;left: 10px;"></a>      
        <div>
            <table>
                <tr>
                    <td>
                        فیلد جستجو:@Html.DropDownList("cboSearchFiald", new SelectList(new[] { new { ID = "0", Name = "عنوان کتاب" }}, "ID", "Name"))
                    </td>
                    <td>
                        نوع جستجو: @Html.DropDownList("cboSearchType", new SelectList(new[] { new { ID = "0", Name = "مشابه عبارت" }, new { ID = "1", Name = "مشابه عبارت از سمت راست" }, new { ID = "2", Name = "عین عبارت" } }, "ID", "Name"))
                    </td>
                </tr>
                <tr>
                    <td>
                        عبارت جستجو:  @UniAutomation.Helper.winClass.textbox("txtSearch")
                    </td>
                    <td>
                        نتیجه رکوردها: @Html.TextBox("txtTop", 30, new { @style = "width:30px;" }) رکورد
                    </td>
                </tr>
            </table>
            <br />
        </div>
        <center>
            <p>
                 @UniAutomation.Helper.winClass.Buttons("Next", "ادامه", "Next")            
                @UniAutomation.Helper.winClass.Buttons("exit", "خروج", "Exit")
            </p>
        </center>
        <div class="k-rtl demo-section">
            @(Html.Kendo().Grid<UniAutomation.Areas.faces.Models.sp_tblL_BookSelect>()
                .Name("Grid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.fldId).Hidden();
                    columns.Bound(p => p.fldBookTitle).Title("عنوان کتاب");
                    columns.Bound(p => p.fldPublisher).Title("ناشر");
                    columns.Bound(p => p.fldAuthor).Title("نویسنده");
                    columns.Bound(p => p.fldInterpreter).Title("مترجم");
                    columns.Bound(p => p.Mojodi).Hidden();
                    
                })
            .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
            .Pageable()
            .Scrollable()
            .DataSource(data =>
                data.Ajax()
                .PageSize(100000)
                                                .Read("Fill", "SearchBook")
            )
        )
        </div>
    </div>
    <script type="text/javascript">
        var state;
        $("document").ready(function () {
            $("#Next").button();
            $("#exit").button();
            $("#Help").button();

            state = '@ViewBag.state';
            $("#exit").click(function () {
                $("#SearchBook").remove();
            });
            $('#New').click(function () {
                windows("#Main", "/faces/L_Book");
                $("#SearchBook").remove();

            });
            $('#SearchBook #btnClose').click(function () {
                $("#SearchBook").remove();
                isWinOpen = false;
            });
            $('#txtSearch').keyup(function () {
                var url = '@Url.Action("Reload", "SearchBook")';
                Reload(url, 'Grid', $("#cboSearchFiald").val(), $("#txtSearch").val(), $("#txtTop").val(), $("#cboSearchType").val());
            });

            $('#Next').click(function () {
                var entityGrid = $("#Grid").data("kendoGrid");
                var selectedItem = entityGrid.dataItem(entityGrid.select());
                if (selectedItem) {
                    var id = selectedItem.fldId;
                    if (state == 1) {
                        if (selectedItem.Mojodi > 0) {

                            windows("#Main", "/faces/L_BookTrust/Index?BookId=" + id);
                        }
                        else {
                            alert('کتاب موجود نیست');
                        }
                    }
                    else if (state == 2) {
                        windows("#Main", "/faces/L_BookStock/Index?BookId=" + id);

                    }

                }
                else {
                    alert('لطفا یک سطر را انتخاب کنید.');
                }
            });
        });

        function Reload(Url, gridname, field, value, top, searchType) {
            var grid = $('#' + gridname).data('kendoGrid');
            $.ajax({
                url: Url,
                type: 'get',
                datatype: 'json',
                data: { field: field, value: value, top: top, searchtype: searchType },
                error: function (xhr, status, error) {
                    alert(xhr + status);
                },
                success: function (result) {
                    $("#" + gridname).data("kendoGrid").dataSource.data(result);
                }

            });
        }

        
    </script>
</div>
